{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "dfa45b30-5b6d-4b38-9084-004b5c2f4342",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd \n",
    "import matplotlib as plt "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9dee84e8-72f6-481a-bd53-ba408e0b2e79",
   "metadata": {},
   "outputs": [],
   "source": [
    "paths = pd.read_csv('./primeTime_practice/path_info_example.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "87309602-95cc-4ed8-917f-c2589a9330ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>pre_slack</th>\n",
       "      <th>cur_slack</th>\n",
       "      <th>post_slack</th>\n",
       "      <th>pre_logic_lvl</th>\n",
       "      <th>cur_logic_lvl</th>\n",
       "      <th>post_logic_lvl</th>\n",
       "      <th>pre_data_delay</th>\n",
       "      <th>cur_data_delay</th>\n",
       "      <th>post_data_delay</th>\n",
       "      <th>clock_skew</th>\n",
       "      <th>startpoint</th>\n",
       "      <th>endpoint</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>-0.026</td>\n",
       "      <td>-0.019</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.285</td>\n",
       "      <td>0.336</td>\n",
       "      <td>0.060</td>\n",
       "      <td>3aezy3kcpz</td>\n",
       "      <td>0yvjb4rnl7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>-0.028</td>\n",
       "      <td>-0.013</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>23</td>\n",
       "      <td>0.423</td>\n",
       "      <td>0.262</td>\n",
       "      <td>0.254</td>\n",
       "      <td>0.062</td>\n",
       "      <td>kcftsibcof</td>\n",
       "      <td>yodvkqtehc</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>-0.014</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>0.283</td>\n",
       "      <td>0.360</td>\n",
       "      <td>0.333</td>\n",
       "      <td>0.028</td>\n",
       "      <td>466eqgixau</td>\n",
       "      <td>9ak5yqftl3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>-0.022</td>\n",
       "      <td>-0.013</td>\n",
       "      <td>-0.016</td>\n",
       "      <td>19</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>0.372</td>\n",
       "      <td>0.368</td>\n",
       "      <td>0.308</td>\n",
       "      <td>0.046</td>\n",
       "      <td>4kfhlsh2ga</td>\n",
       "      <td>wu8vhtj65i</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>-0.024</td>\n",
       "      <td>-0.019</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.373</td>\n",
       "      <td>0.441</td>\n",
       "      <td>0.035</td>\n",
       "      <td>asac8a7a51</td>\n",
       "      <td>74r9njsu6z</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0  pre_slack  cur_slack  post_slack  pre_logic_lvl  cur_logic_lvl  \\\n",
       "0           0     -0.026     -0.019      -0.017             17             21   \n",
       "1           1     -0.007     -0.028      -0.013             22             28   \n",
       "2           2     -0.007     -0.014      -0.017             17             20   \n",
       "3           3     -0.022     -0.013      -0.016             19             18   \n",
       "4           4     -0.010     -0.024      -0.019             20             15   \n",
       "\n",
       "   post_logic_lvl  pre_data_delay  cur_data_delay  post_data_delay  \\\n",
       "0              22           0.419           0.285            0.336   \n",
       "1              23           0.423           0.262            0.254   \n",
       "2              16           0.283           0.360            0.333   \n",
       "3              24           0.372           0.368            0.308   \n",
       "4              15           0.420           0.373            0.441   \n",
       "\n",
       "   clock_skew  startpoint    endpoint  \n",
       "0       0.060  3aezy3kcpz  0yvjb4rnl7  \n",
       "1       0.062  kcftsibcof  yodvkqtehc  \n",
       "2       0.028  466eqgixau  9ak5yqftl3  \n",
       "3       0.046  4kfhlsh2ga  wu8vhtj65i  \n",
       "4       0.035  asac8a7a51  74r9njsu6z  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "59efe76c-2867-4469-a003-4707f7223ecc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Unnamed: 0', 'pre_slack', 'cur_slack', 'post_slack', 'pre_logic_lvl',\n",
       "       'cur_logic_lvl', 'post_logic_lvl', 'pre_data_delay', 'cur_data_delay',\n",
       "       'post_data_delay', 'clock_skew', 'startpoint', 'endpoint'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8a5ce16b-4b07-420a-930e-11080f781818",
   "metadata": {},
   "outputs": [],
   "source": [
    "paths = paths.drop(['Unnamed: 0'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "54155021-b1f8-400f-989e-50addd90502b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pre_slack</th>\n",
       "      <th>cur_slack</th>\n",
       "      <th>post_slack</th>\n",
       "      <th>pre_logic_lvl</th>\n",
       "      <th>cur_logic_lvl</th>\n",
       "      <th>post_logic_lvl</th>\n",
       "      <th>pre_data_delay</th>\n",
       "      <th>cur_data_delay</th>\n",
       "      <th>post_data_delay</th>\n",
       "      <th>clock_skew</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-0.014913</td>\n",
       "      <td>-0.014592</td>\n",
       "      <td>-0.014378</td>\n",
       "      <td>21.968000</td>\n",
       "      <td>21.615000</td>\n",
       "      <td>22.027000</td>\n",
       "      <td>0.353373</td>\n",
       "      <td>0.350894</td>\n",
       "      <td>0.352798</td>\n",
       "      <td>0.049521</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.008512</td>\n",
       "      <td>0.008363</td>\n",
       "      <td>0.008668</td>\n",
       "      <td>4.376086</td>\n",
       "      <td>4.310842</td>\n",
       "      <td>4.377606</td>\n",
       "      <td>0.059208</td>\n",
       "      <td>0.056086</td>\n",
       "      <td>0.056761</td>\n",
       "      <td>0.018193</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-0.029000</td>\n",
       "      <td>-0.029000</td>\n",
       "      <td>-0.029000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.020000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-0.022000</td>\n",
       "      <td>-0.021000</td>\n",
       "      <td>-0.022000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>0.298000</td>\n",
       "      <td>0.305000</td>\n",
       "      <td>0.304000</td>\n",
       "      <td>0.033000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-0.015000</td>\n",
       "      <td>-0.015000</td>\n",
       "      <td>-0.014000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.357500</td>\n",
       "      <td>0.350000</td>\n",
       "      <td>0.355500</td>\n",
       "      <td>0.050000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>-0.007750</td>\n",
       "      <td>-0.008000</td>\n",
       "      <td>-0.007000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>26.000000</td>\n",
       "      <td>0.409000</td>\n",
       "      <td>0.399000</td>\n",
       "      <td>0.398000</td>\n",
       "      <td>0.065250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>-0.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>0.449000</td>\n",
       "      <td>0.449000</td>\n",
       "      <td>0.449000</td>\n",
       "      <td>0.079000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         pre_slack    cur_slack   post_slack  pre_logic_lvl  cur_logic_lvl  \\\n",
       "count  1000.000000  1000.000000  1000.000000    1000.000000    1000.000000   \n",
       "mean     -0.014913    -0.014592    -0.014378      21.968000      21.615000   \n",
       "std       0.008512     0.008363     0.008668       4.376086       4.310842   \n",
       "min      -0.029000    -0.029000    -0.029000      15.000000      15.000000   \n",
       "25%      -0.022000    -0.021000    -0.022000      18.000000      18.000000   \n",
       "50%      -0.015000    -0.015000    -0.014000      22.000000      21.000000   \n",
       "75%      -0.007750    -0.008000    -0.007000      26.000000      25.000000   \n",
       "max      -0.000000    -0.000000    -0.000000      29.000000      29.000000   \n",
       "\n",
       "       post_logic_lvl  pre_data_delay  cur_data_delay  post_data_delay  \\\n",
       "count     1000.000000     1000.000000     1000.000000      1000.000000   \n",
       "mean        22.027000        0.353373        0.350894         0.352798   \n",
       "std          4.377606        0.059208        0.056086         0.056761   \n",
       "min         15.000000        0.250000        0.250000         0.250000   \n",
       "25%         18.000000        0.298000        0.305000         0.304000   \n",
       "50%         22.000000        0.357500        0.350000         0.355500   \n",
       "75%         26.000000        0.409000        0.399000         0.398000   \n",
       "max         29.000000        0.449000        0.449000         0.449000   \n",
       "\n",
       "        clock_skew  \n",
       "count  1000.000000  \n",
       "mean      0.049521  \n",
       "std       0.018193  \n",
       "min       0.020000  \n",
       "25%       0.033000  \n",
       "50%       0.050000  \n",
       "75%       0.065250  \n",
       "max       0.079000  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42e4dd4e-66ee-418f-b9d9-78af3e788e09",
   "metadata": {},
   "source": [
    "Find paths whose data path delay is bigger than average, and see what the worst path is"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "451d0b14-8238-434b-9157-91a0eff30424",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pre_slack              -0.011\n",
       "cur_slack               -0.01\n",
       "post_slack              -0.01\n",
       "pre_logic_lvl              17\n",
       "cur_logic_lvl              17\n",
       "post_logic_lvl             21\n",
       "pre_data_delay          0.315\n",
       "cur_data_delay          0.449\n",
       "post_data_delay         0.352\n",
       "clock_skew              0.079\n",
       "startpoint         8piqsjyeec\n",
       "endpoint           8uf2p3353l\n",
       "Name: 326, dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths.loc[paths['cur_data_delay'] > paths['cur_data_delay'].mean()].sort_values(['cur_data_delay'], ascending=False).iloc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "efdb5c00-b021-4407-ad35-a450192d320b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21.615"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths['cur_logic_lvl'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ab05e101-e019-401b-83f6-d3b0fb5bcf6e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pre_slack</th>\n",
       "      <th>cur_slack</th>\n",
       "      <th>post_slack</th>\n",
       "      <th>pre_logic_lvl</th>\n",
       "      <th>cur_logic_lvl</th>\n",
       "      <th>post_logic_lvl</th>\n",
       "      <th>pre_data_delay</th>\n",
       "      <th>cur_data_delay</th>\n",
       "      <th>post_data_delay</th>\n",
       "      <th>clock_skew</th>\n",
       "      <th>startpoint</th>\n",
       "      <th>endpoint</th>\n",
       "      <th>total data delay</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-0.026</td>\n",
       "      <td>-0.019</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>17</td>\n",
       "      <td>21</td>\n",
       "      <td>22</td>\n",
       "      <td>0.419</td>\n",
       "      <td>0.285</td>\n",
       "      <td>0.336</td>\n",
       "      <td>0.060</td>\n",
       "      <td>3aezy3kcpz</td>\n",
       "      <td>0yvjb4rnl7</td>\n",
       "      <td>1.040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-0.007</td>\n",
       "      <td>-0.028</td>\n",
       "      <td>-0.013</td>\n",
       "      <td>22</td>\n",
       "      <td>28</td>\n",
       "      <td>23</td>\n",
       "      <td>0.423</td>\n",
       "      <td>0.262</td>\n",
       "      <td>0.254</td>\n",
       "      <td>0.062</td>\n",
       "      <td>kcftsibcof</td>\n",
       "      <td>yodvkqtehc</td>\n",
       "      <td>0.939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.007</td>\n",
       "      <td>-0.014</td>\n",
       "      <td>-0.017</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>16</td>\n",
       "      <td>0.283</td>\n",
       "      <td>0.360</td>\n",
       "      <td>0.333</td>\n",
       "      <td>0.028</td>\n",
       "      <td>466eqgixau</td>\n",
       "      <td>9ak5yqftl3</td>\n",
       "      <td>0.976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-0.022</td>\n",
       "      <td>-0.013</td>\n",
       "      <td>-0.016</td>\n",
       "      <td>19</td>\n",
       "      <td>18</td>\n",
       "      <td>24</td>\n",
       "      <td>0.372</td>\n",
       "      <td>0.368</td>\n",
       "      <td>0.308</td>\n",
       "      <td>0.046</td>\n",
       "      <td>4kfhlsh2ga</td>\n",
       "      <td>wu8vhtj65i</td>\n",
       "      <td>1.048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-0.010</td>\n",
       "      <td>-0.024</td>\n",
       "      <td>-0.019</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>0.420</td>\n",
       "      <td>0.373</td>\n",
       "      <td>0.441</td>\n",
       "      <td>0.035</td>\n",
       "      <td>asac8a7a51</td>\n",
       "      <td>74r9njsu6z</td>\n",
       "      <td>1.234</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   pre_slack  cur_slack  post_slack  pre_logic_lvl  cur_logic_lvl  \\\n",
       "0     -0.026     -0.019      -0.017             17             21   \n",
       "1     -0.007     -0.028      -0.013             22             28   \n",
       "2     -0.007     -0.014      -0.017             17             20   \n",
       "3     -0.022     -0.013      -0.016             19             18   \n",
       "4     -0.010     -0.024      -0.019             20             15   \n",
       "\n",
       "   post_logic_lvl  pre_data_delay  cur_data_delay  post_data_delay  \\\n",
       "0              22           0.419           0.285            0.336   \n",
       "1              23           0.423           0.262            0.254   \n",
       "2              16           0.283           0.360            0.333   \n",
       "3              24           0.372           0.368            0.308   \n",
       "4              15           0.420           0.373            0.441   \n",
       "\n",
       "   clock_skew  startpoint    endpoint  total data delay  \n",
       "0       0.060  3aezy3kcpz  0yvjb4rnl7             1.040  \n",
       "1       0.062  kcftsibcof  yodvkqtehc             0.939  \n",
       "2       0.028  466eqgixau  9ak5yqftl3             0.976  \n",
       "3       0.046  4kfhlsh2ga  wu8vhtj65i             1.048  \n",
       "4       0.035  asac8a7a51  74r9njsu6z             1.234  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "paths['total data delay'] = paths['pre_data_delay'] + paths['cur_data_delay'] + paths['post_data_delay']\n",
    "paths.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d39eadb6-575d-4c3f-8600-1b959fa11193",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
